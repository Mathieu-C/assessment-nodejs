{
  "info": {
    "title": "AXA assessment",
    "version": "1.0.0",
    "description": "Node.js assessment using the Moleculer.js microservices framework with the Pankod boilerplate"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "swagger": "2.0",
  "paths": {
    "/api/policies/user/:name": {
      "get": {
        "description": "Get all the policies for user name",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Valid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          },
          "422": {
            "description": "Missing parameters"
          }
        }
      }
    },
    "/api/policies/:id/user": {
      "get": {
        "description": "Get the user linked to the policy number",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Valid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Policy not found"
          },
          "422": {
            "description": "Missing parameters"
          }
        }
      }
    },
    "/auth/users/login": {
      "post": {
        "description": "Logs in the user.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "params",
            "schema": {
              "type": "object",
              "required": [
                "name",
                "password"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "minimum": 1,
                  "maximum": 64,
                  "example": "Mark"
                },
                "password": {
                  "type": "string",
                  "minimum": 1,
                  "maximum": 64,
                  "example": "alligator15"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login in successful"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          },
          "422": {
            "description": "Missing parameters"
          }
        }
      }
    },
    "/api/users/:id": {
      "get": {
        "description": "Get a user by ID",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          },
          "422": {
            "description": "Missing parameters"
          }
        }
      }
    },
    "/api/users/name/:name": {
      "get": {
        "description": "Get a user by name",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          },
          "422": {
            "description": "Missing parameters"
          }
        }
      }
    }
  },
  "definitions": {},
  "responses": {},
  "parameters": {},
  "securityDefinitions": {},
  "tags": []
}